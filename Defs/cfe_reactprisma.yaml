swagger: "2.0"
info:
  description: "Описание методов http-сервиса 1С."
  version: "1.0.0"
  title: "HTTP-сервис цл_РеактПризма"
host: "192.168.242.20"
basePath: "/ut115_reactive-prisma/hs/reactive-prisma"
tags:
  - name: "НСИ"
    description: "Поток нормативно-справочной информации (статичные данные)"
  - name: "Динамичные данные"
    description: "Поток динамичных данных (по подписке)"
  - name: "Данные транзакции"
    description: "Поток транзакционных данных (не хранящихся на стороне призма-сервер)"
  - name: "Данные сообщения"
    description: "Поток данных авторизации и ответа призма-сервера и 1С"
paths:
  /types_of_items:
    get:
      tags:
        - "НСИ"
      summary: "Зарегистрированные виды номенклатуры"
      description: "Забирает из 1С зарегистрированные виды номенклатуры и удаляет регистрацию. \n \n toi_id - ГУИД вида номенклатуры.\n toi_name - Наименование вида номенклатуры.\n toi_parent_id - ГУИД родителя вида номенклатуры."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful"
          schema:
            type: array
            items:
              type: object
              properties:
                type_of_item_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                type_of_item_name:
                  type: string
                  example: "Наименование"
                type_of_item_parent_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /settings_periods:
    get:
      tags:
        - "НСИ"
      summary: "Зарегистрированные периоды формирования отчета"
      description: "Забирает из 1С зарегистрированные периоды формирования отчета и удаляет регистрацию. \n\n settings_period_id - ГУИД периода формирования отчета. \n settings_period_name - имя периода формирования отчета. \n settings_period_days - количество дней в периоде формирования отчета."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful"
          schema:
            type: array
            items:
              type: object
              properties:
                settings_period_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                settings_period_name:
                  type: string
                  example: "Наименование"
                settings_period_days:
                  type: number
                  example: 14
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /warehouses:
    get:
      tags:
        - "НСИ"
      summary: "Зарегистрированные склады"
      description: "Забирает из 1С зарегистрированные склады и удаляет регистрацию. \n\n warehouse_id - ГУИД склада. \n warehouse_name - Наименование склада. \n warehouse_parent_id - ГУИД родительской группы."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful"
          schema:
            type: array
            items:
              type: object
              properties:
                warehouse_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                warehouse_name:
                  type: string
                  example: "Наименование"
                warehouse_parent_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /types_of_prices:
    get:
      tags:
        - "НСИ"
      summary: "Зарегистрированные виды цен"
      description: "Забирает из 1С зарегистрированные виды цен (кроме Себеста) и удаляет регистрацию. \n\n type_of_price_id - ГУИД вида цены. \n type_of_price_name - наименование вида цены. \n type_of_price_parent_id - ГУИД родительской группы."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful"
          schema:
            type: array
            items:
              type: object
              properties:
                type_of_price_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                type_of_price_name:
                  type: string
                  example: "Наименование"
                type_of_price_parent_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /segment_groups:
    get:
      tags:
        - "НСИ"
      summary: "Зарегистрированные сегменты (группы)"
      description: "Забирает из 1С зарегистрированные сегменты (только группы) и удаляет регистрацию. \n\n segment_id - ГУИД сегмента. \n segment_name - Наименование сегмента. segment_is_group - Булево, является группой или нет."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful"
          schema:
            type: array
            items:
              type: object
              properties:
                segment_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                segment_name:
                  type: string
                  example: "Наименование"
                segment_is_group:
                  type: boolean
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /items:
    get:
      tags:
        - "НСИ"
      summary: "Зарегистрированная номенклатура"
      description: "Забирает из 1С зарегистрированную номенклатурру (только элементы, не группы) и удаляет регистрацию. \n\n _id - ГУИД номенклатуры. \n item_name - Наименование номенклатуры. \n item_toi_id - ГУИД вида номенклатуры. \n item_code - Артуикул номенклатуры. \n item_producer - Наименование производителя. \n item_is_service - Булево, является услугой или нет."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful"
          schema:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                item_name:
                  type: string
                  example: "Наименование"
                item_toi_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                item_code:
                  type: string
                  example: "Артикул"
                item_producer:
                  type: string
                  example: "Производитель"
                item_is_service:
                  type: boolean
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /registered_segments:
    get:
      tags:
        - "НСИ"
      summary: "Зарегистрированные сегменты (НЕ группы)"
      description: "Забирает из 1С зарегистрированные сегменты (только элементы, не группы) и удаляет регистрацию. \n\n segment_id - ГУИД сегмента. \n segment_name - Наименование сегмента. \n segment_parent_id - ГУИД родительской группы."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful"
          schema:
            type: array
            items:
              type: object
              properties:
                segment_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                segment_name:
                  type: string
                  example: "Наименование"
                segment_parent_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /online_payment_price:
    get:
      tags:
        - "НСИ"
      summary: "Вид цены: Цена за онлайн оплату"
      description: Получает из 1С GUID цены за онлайн оплату"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful"
          schema:
            type: string
            example: "000000-0000-0000-0000-000000"
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /registered_corridors:
    get:
      tags:
        - "НСИ"
      summary: "Зарегистрированные ценовые коридоры"
      description: "Забирает из 1С зарегистрированные ценовые коридоры и удаляет регистрацию. \n\n corridor_id - ГУИД ценового коридора. \n corridor_name - Наименование ценового коридора. \n corridor_start - Начало ценового коридора. \n corridor_end - Окончание ценового коридора. \n corridor_is_off - Булево, коридор активен или нет. \n corridor_is_last - Булево, последний в наборе коридоров или нет."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful"
          schema:
            type: array
            items:
              type: object
              properties:
                corridor_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                corridor_name:
                  type: string
                  example: "Наименование"
                corridor_start:
                  type: number
                  example: 1
                corridor_end:
                  type: number
                  example: 1000000
                corridor_is_off:
                  type: boolean
                  example: false
                corridor_is_last:
                  type: boolean
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /additional_requisites:
    get:
      tags:
        - "НСИ"
      summary: "Зарегистрированные дополнительные реквизиты номенклатуры"
      description: "Забирает из 1С зарегистрированные дополнительные реквизиты номенклатуры и удаляет регистрацию. \n\n additional_requisite_id - ГУИД доп. реквизита. \n additional_requisite_name - Наименование доп. реквизита. \n additional_requisite_prop_id - Свойство доп. реквизита."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful"
          schema:
            type: array
            items:
              type: object
              properties:
                additional_requisite_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                additional_requisite_name:
                  type: string
                  example: "Наименование"
                additional_requisite_prop_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /all_additional_properties:
    get:
      tags:
        - "НСИ"
      summary: "Все доп. свойства номенклатуры"
      description: "Получает все доп. свойства номенклатуры.\n\n additional_property_id - ГУИД доп. свойства. \n additional_property_type_of_item_id - ГУИД вида номенклатуры доп. свойства. \n  additional_property_name - Наименование доп. свойства."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful"
          schema:
            type: array
            items:
              type: object
              properties:
                additional_property_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                additional_property_type_of_item_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                additional_property_name:
                  type: string
                  example: "Наименование"
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /registered_docs:
    get:
      tags:
        - "Динамичные данные"
      summary: "Зарегистрированные документы"
      description: "Забирает из 1С зарегистрированные документы и удаляет регистрацию.\n\n doc_id - ГУИД документа. \n doc_name - Наименование документа. \n doc_type - Вид документа."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful"
          schema:
            type: array
            items:
              type: object
              properties:
                doc_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                doc_name:
                  type: string
                  example: "Наименование"
                doc_type:
                  type: string
                  example: "sp"
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /balance:
    post:
      tags:
        - "Данные транзакции"
      summary: "Остатки товаров на складе"
      description: "На основании переданных параметров, получает информацию об остатках товаров на складе. \n\nПараметры: \n type_of_items_id - ГУИД вида номенклатуры. \n warehouse_id - ГУИД склада. \n period_end - Дата окончания отчета. \n is_dc - Булево, является складом РЦ или нет. \n\n Ответ: \n warehouse - ГУИД склада. \n balance_item_id - ГУИД номенклатуры. \n balance_value - Значение остатков."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              type_of_items_id:
                type: array
                items:
                  type: string
                  example: "000000-0000-0000-0000-000000"
              warehouse_id:
                type: string
                example: "000000-0000-0000-0000-000000"
              period_end:
                type: string
                example: "2022-01-01T23:59:59.599Z"
              is_dc:
                type: boolean
                example: "false"
      responses:
        "200":
          description: "Successful if isDC is false"
          schema:
            type: object
            properties:
              warehouse:
                type: string
                example: "000000-0000-0000-0000-000000"
              rows:
                type: array
                items:
                  type: object
                  properties:
                    balance_item_id:
                      type: string
                      example: "000000-0000-0000-0000-000000"
                    balance_value:
                      type: number
        "210":
          description: "Successful if isDC is true"
          schema:
            type: array
            items:
              type: object
              properties:
                balance_item_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                balance_value:
                  type: number
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /transits:
    post:
      tags:
        - "Данные транзакции"
      summary: "Товары в пути на складе"
      description: "На основании переданных параметров, получает информацию о товарах в пути на склад. \n\nПараметры: \n type_of_items_id - ГУИД вида номенклатуры. \n warehouse_id - ГУИД склада. \n period_end - Дата окончания отчета. \n is_dc - Булево, является складом РЦ или нет. \n\n Ответ: \n warehouse - ГУИД склада. \n transit_item_id - ГУИД номенклатуры. \n transit_value - Значение транзита (в пути на этот склад)."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              type_of_items_id:
                type: array
                items:
                  type: string
                  example: "000000-0000-0000-0000-000000"
              warehouse_id:
                type: string
                example: "000000-0000-0000-0000-000000"
              period_end:
                type: string
                example: "2022-01-01T23:59:59.599Z"
              is_dc:
                type: boolean
      responses:
        "200":
          description: "Successful if isDC is false"
          schema:
            type: object
            properties:
              warehouse:
                type: string
                example: "000000-0000-0000-0000-000000"
              rows:
                type: array
                items:
                  type: object
                  properties:
                    transit_item_id:
                      type: string
                      example: "000000-0000-0000-0000-000000"
                    transit_value:
                      type: number
        "210":
          description: "Successful if isDC is true"
          schema:
            type: array
            items:
              type: object
              properties:
                transit_item_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                transit_value:
                  type: number
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /items_from_doc:
    post:
      tags:
        - "Данные транзакции"
      summary: "Номенклатура из документа"
      description: 'На основании переданных параметров, получает массив номенклатуры из табличной части "Товары" документа определенного типа по переданному документу.'
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: string
            example: "000000-0000-0000-0000-000000"
      responses:
        "200":
          description: "Successful"
          schema:
            type: array
            items:
              type: string
              example: "000000-0000-0000-0000-000000"
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /manual_motivation:
    post:
      tags:
        - "Данные транзакции"
      summary: "Ручная мотивация"
      description: "На основании переданных параметров, получает значения ручной мотивации для данной номенклатуры. \n\nПараметры: \n type_of_items_id - ГУИД вида номенклатуры. \n period_end - Дата окончания отчета. \n\nОтвет: \n manual_motivation_item_id - ГУИД номенклатуры. \n manual_motivation_sum - Значение ручной мотивации (абс. сумма). \n manual_motivation_percent - Значение ручной мотивации (процент). \n manual_motivation_is_off - Булево, ручная мотивация на товар отключена или нет."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              type_of_items_id:
                type: array
                items:
                  type: string
                  example: "000000-0000-0000-0000-000000"
              period_end:
                type: string
                example: "2022-01-01T23:59:59.599Z"
      responses:
        "200":
          description: "Successful"
          schema:
            type: array
            items:
              type: object
              properties:
                manual_motivation_item_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                manual_motivation_sum:
                  type: number
                manual_motivation_percent:
                  type: number
                manual_motivation_is_off:
                  type: boolean
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /motivation:
    post:
      tags:
        - "Данные транзакции"
      summary: "Мотивация"
      description: "На основании переданных параметров, получает значения мотивации разных ценовых коридоров для номенклатуры по данным видам.\n\nПараметры: \n type_of_items_id - ГУИД вида номенклатуры. \n period_end - Дата окончания отчета. \n\nОтвет: \n motivation_type_of_item_id - ГУИД вида номенклатуры. \n motivation_corridor_id - ГУИД ценового коридора. \n motivation_margin - мотивация в проценте от маржи."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              type_of_items_id:
                type: array
                items:
                  type: string
                  example: "000000-0000-0000-0000-000000"
              period_end:
                type: string
                example: "2022-01-01T23:59:59.599Z"
      responses:
        "200":
          description: "Successful"
          schema:
            type: object
            properties:
              motivation_type_of_item_id:
                type: string
                example: "000000-0000-0000-0000-000000"
              motivation_corridor_id:
                type: string
                example: "000000-0000-0000-0000-000000"
              motivation_margin:
                type: number
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /price_of_last_purchase:
    post:
      tags:
        - "Данные транзакции"
      summary: "Цены последнего закупа"
      description: "На основании переданных параметров, получает цены последнего закупа для номенклатуры по данным видам.\n\nПараметры: \n type_of_items_id - ГУИД вида номенклатуры. \n period_end - Дата окончания отчета. \n\nОтвет:\n last_purchase_item_id - ГУИД номенклатуры. \n last_purchase_price - Значение цены."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              type_of_items_id:
                type: array
                example: "000000-0000-0000-0000-000000"
                items:
                  type: string
              period_end:
                type: string
                example: "2022-01-01T23:59:59.599Z"
      responses:
        "200":
          description: "Successful"
          schema:
            type: object
            properties:
              last_purchase_item_id:
                type: string
                example: "000000-0000-0000-0000-000000"
              last_purchase_price:
                type: number
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /price:
    post:
      tags:
        - "Данные транзакции"
      summary: "Цены номенклатуры"
      description: "На основании переданных параметров, получает цены номенклатуры указанного типа цены на указанную дату для набора видов номенклатуры.\n\nПараметры: \n type_of_price_id - ГУИД вида цены \n type_of_items_id - ГУИД вида номенклатуры. \n period_end - Дата окончания отчета. \n\nОтвет:\n type_of_price_id - ГУИД вида цены. \n item_id - ГУИД номенклатуры. \n price - Значение цены."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              type_of_items_id:
                type: array
                items:
                  type: string
                  example: "000000-0000-0000-0000-000000"
              type_of_price_id:
                type: string
                example: "000000-0000-0000-0000-000000"
              period_end:
                type: string
                example: "2022-01-01T23:59:59.599Z"
      responses:
        "200":
          description: "Successful"
          schema:
            type: object
            properties:
              type_of_price_id:
                type: string
                example: "000000-0000-0000-0000-000000"
              rows:
                type: array
                items:
                  type: object
                  properties:
                    item_id:
                      type: string
                      example: "000000-0000-0000-0000-000000"
                    price:
                      type: number
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /primecost:
    post:
      tags:
        - "Данные транзакции"
      summary: "Цены номенклатуры"
      description: "На основании переданных параметров, получает себестоимость номенклатуры на указанную дату для набора видов номенклатуры.\n\nПараметры: \n type_of_items_id - ГУИД вида номенклатуры. \n period_end - Дата окончания отчета. \n\nОтвет: \n item_id - ГУИД номенклатуры. \n price - Значение цены."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              type_of_items_id:
                type: array
                items:
                  type: string
                  example: "000000-0000-0000-0000-000000"
              period_end:
                type: string
                example: "2022-01-01T23:59:59.599Z"
      responses:
        "200":
          description: "Successful"
          schema:
            type: array
            items:
              type: object
              properties:
                item_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                price:
                  type: number
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"

  /additional_characteristics_values:
    post:
      tags:
        - "Данные транзакции"
      summary: "Значения доп. реквизитов"
      description: "На основании переданных параметров, получает значения доп. реквизитов для номенклатуры по данным видам номенклатуры и доп. свойству.\n\nПараметры: \n type_of_items_id - ГУИД вида номенклатуры. \n property - ГУИД доп. свойства. \n\nОтвет: \n _id - ГУИД номенклатуры. \n additional_requisite_id - ГУИД доп. реквизита. \n additional_requisite_name - Наименование доп. реквизита."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              type_of_items_id:
                type: array
                items:
                  type: string
                  example: "000000-0000-0000-0000-000000"
              property:
                type: string
                example: "000000-0000-0000-0000-000000"
      responses:
        "200":
          description: "Successful"
          schema:
            type: array
            items:
              type: object
              properties:
                _id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                additional_requisite_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                additional_requisite_name:
                  type: string
                  example: "Наименование"
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"

  /segments:
    post:
      tags:
        - "Данные транзакции"
      summary: "Сегменты номенклатуры"
      description: "На основании переданных параметров, получает значения сегментов для номенклатуры по данным видам номенклатуры и группам сегментов.\n\nПараметры: \n type_of_items_id - ГУИД вида номенклатуры. \n segment_groups - ГУИД группы сегмента. \n\nОтвет:\n segment_item_id - ГУИД номенклатуры. \n segment_id - ГУИД сегмента. \n segment_name - Наименование сегмента. \n segment_parent_id - ГУИД, родительская группа сегмента. \n segment_parent_name - Наименование родительской группы сегмента."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              type_of_items_id:
                type: array
                items:
                  type: string
                  example: "000000-0000-0000-0000-000000"
              segment_groups:
                type: array
                items:
                  type: string
                  example: "000000-0000-0000-0000-000000"
      responses:
        "200":
          description: "Successful"
          schema:
            type: array
            items:
              type: object
              properties:
                segment_item_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                segment_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                segment_name:
                  type: string
                  example: "Наименоване"
                segment_parent_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                segment_parent_name:
                  type: string
                  example: "Родитель.Наименование"
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /sold:
    post:
      tags:
        - "Данные транзакции"
      summary: "Продажи по складу"
      description: "На основании переданных параметров, получает значения продаж для номенклатуры по данным видам номенклатуры, складу и периоду.\n\nПараметры: \n type_of_items_id - ГУИД вида номенклатуры. \n warehouse_id - ГУИД склада. \n period_start - Дата начала отчета. \n period_end - Дата окончания отчета. \n is_dc - Булево, является складом РЦ или нет. \n\nОтвет:\n warehouse - ГУИД склада. \n sold_item_id - ГУИД номенклатуры. \n sold_value - Значение проданного."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              type_of_items_id:
                type: array
                items:
                  type: string
                  example: "000000-0000-0000-0000-000000"
              warehouse_id:
                type: string
                example: "000000-0000-0000-0000-000000"
              period_start:
                type: string
                example: "2022-01-01T23:59:59.599Z"
              period_end:
                type: string
                example: "2022-01-01T23:59:59.599Z"
              is_dc:
                type: boolean
      responses:
        "200":
          description: "Successful if isDC is false"
          schema:
            type: object
            properties:
              warehouse:
                type: string
                example: "000000-0000-0000-0000-000000"
              rows:
                type: array
                items:
                  type: object
                  properties:
                    sold_item_id:
                      type: string
                      example: "000000-0000-0000-0000-000000"
                    sold_value:
                      type: number
        "210":
          description: "Successful if isDC is true"
          schema:
            type: array
            items:
              type: object
              properties:
                sold_item_id:
                  type: string
                sold_value:
                  type: number
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
  /supplier_prices:
    post:
      tags:
        - "Данные транзакции"
      summary: "Прайсы поставщика"
      description: "На основании переданных параметров, получает значения прайсов поставщика для номенклатуры по данным видам номенклатуры и дате. \n\nПараметры: \n type_of_items_id - ГУИД вида номенклатуры. \n period_end - Дата окончания отчета. \n\nОтвет:\n supplier_price_item_id - ГУИД номенклатуры. \n supplier_price_price - Значение цены. \n supplier_price_date - Дата закупа."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              type_of_items_id:
                type: array
                items:
                  type: string
                  example: "000000-0000-0000-0000-000000"
              period_end:
                type: string
                example: "2022-01-01T23:59:59.599Z"
      responses:
        "200":
          description: "Successful"
          schema:
            type: array
            items:
              type: object
              properties:
                supplier_price_item_id:
                  type: string
                  example: "000000-0000-0000-0000-000000"
                supplier_price_price:
                  type: number
                supplier_price_date:
                  type: string
                  example: "2022-01-01T23:59:59.599Z"
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"

  /apply:
    post:
      tags:
        - "Данные сообщения"
      summary: "Применить изменения"
      description: "Приминяет изменения в 1С. Создает документы, регистрирует сегменты и прочее.\n\nПараметры: \n login - Имя пользователя. \n password - Пароль пользователя. \n set_price_data - Данные для документов установки цен номенклатуры. \n workingDate - Рабочая дата. \n set_segments_data - Данные для установки сегментов. \n set_manual_motivation_data - Данные для установки ручной мотивации. \n unset_manual_motivation_data - Данные для отключения ручной мотивации \n transfer_docs_data - Данные для создания документов перемещения."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              login:
                type: string
                example: "ИмяПользователя"
              password:
                type: string
                example: "ПарольПользователя"
              set_price_data:
                type: object
                properties:
                  workingDate:
                    type: string
                    example: "2022-01-01T23:59:59.599Z"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        type_of_price:
                          type: string
                          example: "000000-0000-0000-0000-000000"
                        items:
                          type: array
                          items:
                            type: object
                            properties:
                              item_id:
                                type: string
                                example: "000000-0000-0000-0000-000000"
                              price:
                                type: number
              set_segments_data:
                type: array
                items:
                  type: object
                  properties:
                    item_id:
                      type: string
                      example: "000000-0000-0000-0000-000000"
                    toAdd:
                      type: array
                      items:
                        type: string
                        example: "000000-0000-0000-0000-000000"
                    toRemove:
                      type: array
                      items:
                        type: string
                        example: "000000-0000-0000-0000-000000"
              set_manual_motivation_data:
                type: object
                properties:
                  workingDate:
                    type: string
                    example: "2022-01-01T23:59:59.599Z"
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        item_id:
                          type: string
                          example: "000000-0000-0000-0000-000000"
                        value:
                          type: number
                        type:
                          type: number
              unset_manual_motivation_data:
                type: object
                properties:
                  workingDate:
                    type: string
                    example: "2022-01-01T23:59:59.599Z"
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        item_id:
                          type: string
                          example: "000000-0000-0000-0000-000000"
              transfer_docs_data:
                type: object
                properties:
                  workingDate:
                    type: string
                    example: "2022-01-01T23:59:59.599Z"
                  docs:
                    type: array
                    items:
                      type: object
                      properties:
                        w_sender:
                          type: string
                          example: "000000-0000-0000-0000-000000"
                        w_receiver:
                          type: string
                          example: "000000-0000-0000-0000-000000"
                        items:
                          type: array
                          items:
                            type: string
                            example: "000000-0000-0000-0000-000000"

      responses:
        "200":
          description: "Successful"
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"

  /auth:
    get:
      tags:
        - "Данные сообщения"
      summary: "Авторизация"
      description: "В качестве токена авторизации получает GUID пользователя."
      consumes:
        - "application/json"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful"
          schema:
            type: string
            example: "000000-0000-0000-0000-000000"
        "401":
          description: "Unauthorized"
        "500":
          description: "Uncaught exception"
